#!/usr/bin/env perl

use strict;
use warnings;

use version; our $VERSION = qv('1.0.0');

use Carp;
use Cwd qw(abs_path getcwd);
use English qw(-no_match_vars);
use File::Basename;
use File::Copy;
use File::Spec;
use Getopt::Std;

use Data::Dumper;

$Getopt::Std::STANDARD_HELP_VERSION = 1;

my ( $script_name, $script_folder ) = fileparse( abs_path($PROGRAM_NAME) );
my $current_folder = getcwd();

my $t_required = 0;
my $extension;
my $opts = {};

my $ln_script_name = $PROGRAM_NAME;
$ln_script_name =~ s/^.*$script_name/$script_name/;

my @script_parts = split( /\./, $ln_script_name);
if(@script_parts <= 1) {
    $t_required = 1;
}
else {
    shift @script_parts;
    $extension = join('.',@script_parts);
}

getopts('ht:', $opts);

# add other options to check for here
if( exists $opts->{'h'} or
    not defined $ARGV[0] or
    ($t_required == 1 and not defined $opts->{'t'})
  ) {
    HELP_MESSAGE();
    if( exists $opts->{'h'} ) {
        exit 0;
    }
    exit 1;
}

if( $t_required ) {
    $extension = $opts->{'t'};
}

my $filename = $ARGV[0];

my $template_dir = File::Spec->catdir( $script_folder,'templates' );
opendir( my $dirh,$template_dir );
my %filetypes = map { $_ => 1} grep { $_ ne '.' and $_ ne '..' } readdir( $dirh );
closedir($dirh);

if( exists $filetypes{$extension} ) {
    print {*STDOUT} "Making $filename\n"; 
    copy(
        File::Spec->catfile($template_dir,$extension),
        $filename
    );
}
else {
    print {*STDOUT} "Extension '$extension' has no template\n";
    print {*STDOUT} "Check for a file in $template_dir\n";
    exit 1;
}

exit 0;

sub HELP_MESSAGE {
    my $helptext;
    my $name_length = length $script_name;

    $helptext = "Usage:\n";
    if( $t_required ) {
        $helptext .= q{  }.$script_name." -t <type> <filename>\n";
    }
    else {
        $helptext .= q{  }.$ln_script_name." <filename>\n";
    }

    print {*STDERR} $helptext;
    return;
}
# vim:fdm=marker:syntax=perl:cc=80
